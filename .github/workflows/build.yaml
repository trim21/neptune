name: build

on:
  push:
    branches:
      - master

env:
  GOTOOLCHAIN: local

jobs:
  binary:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.5"
          cache-dependency-path: |
            go.sum

      - run: task release
        env:
          CGO_ENABLED: '0'

      - uses: actions/upload-artifact@v4
        with:
          name: tyr-${{ runner.os }}
          path: dist

  docker:
    needs: [ binary ]
    runs-on: "ubuntu-latest"
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: 'tyr-*'
          path: dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 'ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}'
          tags: |
            type=semver,pattern=v{{version}}

            type=ref,event=branch
            type=ref,event=branch,suffix=-{{ sha }}

            type=raw,value=${{ env.SHA }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: etc/Dockerfile
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
