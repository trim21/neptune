name: ci

on:
  push:
    paths-ignore:
      - "*.md"
    branches:
      - master
  pull_request:
    paths-ignore:
      - "*.md"
    branches:
      - master

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  GOTOOLCHAIN: local

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: trim21/actions/setup-go@master
        with:
          cache-namespace: sec

      # check go mod clean
      - run: go mod tidy
      - run: git diff --exit-code
      - run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - run: govulncheck -tags release ./...

  test:
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15]
    steps:
      - uses: actions/checkout@v4

      - uses: trim21/actions/setup-go@master
        with:
          cache-namespace: test

      - name: Install gotestsum
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: gotestyourself/gotestsum
          tag: v1.12.1

      - run: >-
          gotestsum --format=pkgname --format-hide-empty-pkg
          -- -race -count=1 -coverprofile=coverage.txt -covermode=atomic ./...
        shell: bash

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: >-
          gotestsum --format=pkgname --format-hide-empty-pkg
          -- -race -tags=release -count=1 -coverprofile=coverage.txt -covermode=atomic ./...
        shell: bash

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: go build -tags=release -o tmp/try.exe
      - run: ./tmp/try.exe --help

      - run: go build -o tmp/try.exe
      - run: ./tmp/try.exe --help

  license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: python tools/scan-license-header.py

  lint:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: trim21/actions/setup-go@master
        with:
          cache-namespace: lint

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0

  dprint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: curl -fsSL https://dprint.dev/install.sh | sh -
      - run: echo "/home/runner/.dprint/bin" >> $GITHUB_PATH
      - run: dprint output-file-paths
      - run: dprint check
