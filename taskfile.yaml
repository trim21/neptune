version: 3

tasks:
  lint:
    deps:
      - tools:betteralign
    cmds:
      - ./.bin/betteralign.exe -apply ./...
      - golangci-lint run

  gen: go generate ./...

  tools:betteralign:
    internal: true
    dir: tools
    generates:
      - ../.bin/betteralign.exe
    sources:
      - go.mod
      - go.sum
    cmds:
      - go build -o ../.bin/betteralign.exe github.com/dkorunic/betteralign/cmd/betteralign

  tools:gotestsum:
    internal: true
    dir: tools
    generates:
      - ../.bin/gotestsum.exe
    sources:
      - go.mod
      - go.sum
    cmds:
      - go build -o ../.bin/gotestsum.exe gotest.tools/gotestsum

  test:
    deps:
      - tools:gotestsum
    cmd: ./.bin/gotestsum.exe --format-hide-empty-pkg -- -count=1 -coverprofile=coverage.txt -covermode=atomic -tags assert ./...

  mod-tidy:
    cmds:
      - task: mod-tidy:tools
      - go mod tidy

  mod-tidy:tools:
    internal: true
    dir: tools
    cmd: go mod tidy


  release:
    cmds:
      - task: release:linux
      - task: release:windows
      - task: release:darwin

  release:windows:
    internal: true
    cmd:
      task: binary
      vars:
        GOOS: darwin
        GOARCH: arm64
        CGO_ENABLED: '0'
        OUT_PATH: 'dist/tyr_windows_amd64.exe'

  release:darwin:
    internal: true
    cmds:
      - task: binary
        vars:
          GOOS: darwin
          GOARCH: amd64
          CGO_ENABLED: '0'
          OUT_PATH: 'dist/tyr_darwin_amd64'
      - task: binary
        vars:
          GOOS: darwin
          GOARCH: arm64
          CGO_ENABLED: '0'
          OUT_PATH: 'dist/tyr_darwin_arm64'

  release:linux:
    internal: true
    cmds:
      - task: binary
        vars:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: '0'
          OUT_PATH: 'dist/tyr_linux_amd64'
      - task: binary
        vars:
          GOOS: linux
          GOARCH: arm64
          CGO_ENABLED: '0'
          OUT_PATH: 'dist/tyr_linux_arm64'

  binary:
    internal: true
    vars:
      REF:
        sh: git describe --dirty=' (dirty)' --first-parent --all
      SHA:
        sh: git rev-parse --short HEAD
    cmds:
      - >-
        {{ if .CGO_ENABLED }}CGO_ENABLED={{ .CGO_ENABLED }}{{end}}
        {{ if .GOARCH }}GOARCH={{ .GOARCH }}{{ end }}
        {{ if .GOOS }}GOOS={{ .GOOS }}{{ end }}
        go build
        -ldflags="-X 'tyr/internal/version.Ref={{ .REF }}' -X 'tyr/internal/version.BuildDate={{ dateInZone "2006-01-02T15:04:05Z07:00" (now) "UTC" }}'" 
        -buildvcs=true {{ .EXTRA_FLAGS }} -trimpath -tags release -o {{ .OUT_PATH }}

  build:
    generates:
      - dist/tyr.exe
    sources:
      - go.mod
      - go.sum
      - "**/*.go"
    cmds:
      - task: binary
        vars:
          TAG: release
          OUT_PATH: dist/tyr.exe

  dev:
    generates:
      - dist/a-file-not-exists-so-task-always-run
    sources:
      - .env
      - go.mod
      - go.sum
      - "**/*.go"
    dotenv:
      - .env
    cmds:
      - go build -o dist/dev/tmp.exe
      #
      - cmd: |
          until rm dist/dev/server.exe -rf && cp dist/dev/tmp.exe dist/dev/tyr.exe
          do
            echo "can't copy, try again"
            sleep 1
          done
      - dist/dev/tyr.exe --debug

  dev:release:
    deps:
      - build
    cmds:
      - cp dist/tyr.exe dist/tmp/release.exe
      - dist/tmp/release.exe --web 127.0.0.1:8002

  pprof:
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002

  pprof:block:
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/block

  heap:
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/heap

  heap-compare:
    cmds:
      - curl -s http://127.0.0.1:8002/debug/pprof/heap > tmp/base.heap
      - sleep 5
      - go tool pprof -http=:8001 --base tmp/base.heap http://127.0.0.1:8002/debug/pprof/heap

  update-swagger:
    cmd: cp ./node_modules/swagger-ui-dist/  internal/web/frontend/docs/ -r
