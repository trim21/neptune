version: 3

tasks:
  lint:
    desc: run lint
    cmds:
      - golangci-lint run --fix

  gen:
    desc: run go generate
    cmd: go generate ./...

  test:
    desc: run go test
    cmd: go test -count=1 -coverprofile=coverage.txt -covermode=atomic -tags assert ./...

  mod-tidy:
    cmds:
      - go mod tidy

  release:
    desc: build release binary for all supported platform
    cmds:
      - task: release:windows:arm64
      - task: release:windows:amd64
      - task: release:linux:amd64
      - task: release:linux:arm64
      - task: release:darwin:arm64
      - task: release:darwin:amd64

  release:windows:amd64:
    cmds:
      - task: binary
        vars:
          GOOS: windows
          GOARCH: amd64
          OUT_PATH: "dist/neptune_windows_amd64.exe"

  release:windows:arm64:
    cmds:
      - task: binary
        vars:
          GOOS: windows
          GOARCH: arm64
          OUT_PATH: "dist/neptune_windows_arm64.exe"

  release:darwin:amd64:
    cmds:
      - task: binary
        vars:
          GOOS: darwin
          GOARCH: amd64
          OUT_PATH: "dist/neptune_darwin_amd64"

  release:darwin:arm64:
    cmds:
      - task: binary
        vars:
          GOOS: darwin
          GOARCH: arm64
          OUT_PATH: "dist/neptune_darwin_arm64"

  release:linux:amd64:
    cmds:
      - task: binary
        vars:
          GOOS: linux
          GOARCH: amd64
          OUT_PATH: "dist/neptune_linux_amd64"

  release:linux:arm64:
    cmds:
      - task: binary
        vars:
          GOOS: linux
          GOARCH: arm64
          OUT_PATH: "dist/neptune_linux_arm64"

  binary:
    internal: true
    env:
      CGO_ENABLED: "0"
    vars:
      REF:
        sh: git describe --first-parent --all
      SHA:
        sh: git rev-parse --short HEAD
    cmds:
      - >-
          {{ if .GOARCH }}GOARCH={{ .GOARCH }}{{ end }}
          {{ if .GOOS }}GOOS={{ .GOOS }}{{ end }}
          go build
          -ldflags="-s -X 'neptune/internal/version.Ref={{ .REF }}' -X 'neptune/internal/version.BuildDate={{ dateInZone "2006-01-02T15:04:05Z07:00" (now) "UTC" }}'"
          -buildvcs=true {{ .EXTRA_FLAGS }} -trimpath -tags release -o {{ .OUT_PATH }}

  build:
    generates:
      - dist/neptune.exe
    sources:
      - go.mod
      - go.sum
      - "**/*.go"
    cmds:
      - task: binary
        vars:
          TAG: release
          OUT_PATH: dist/neptune.exe

  dev:
    desc: watch source file and start development binary
    generates:
      - dist/a-file-not-exists-so-task-always-run
    sources:
      - .env
      - go.mod
      - go.sum
      - config.toml
      - "**/*.go"
      - exclude: "**/*_test.go"
    dotenv:
      - .env
    cmds:
      - go build -trimpath -o dist/dev/tmp.exe
      - |
          until rm dist/dev/server.exe -rf && cp dist/dev/tmp.exe dist/dev/neptune.exe
          do
            echo "can't copy, try again"
            sleep 1
          done
      - dist/dev/neptune.exe --debug --config-file config.yaml

  pprof:
    desc: run golang pprof tool
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002

  pprof:block:
    desc: run golang pprof tool for block
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/block

  pprof:mutex:
    desc: run golang pprof tool for mutex
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/mutex

  pprof:alloc:
    desc: run golang pprof tool for alloc
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/allocs

  pprof:heap:
    desc: run golang pprof tool for heap
    cmds:
      - go tool pprof -http=:8001 http://127.0.0.1:8002/debug/pprof/heap
